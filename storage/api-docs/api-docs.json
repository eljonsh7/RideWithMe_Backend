{
    "openapi": "3.0.0",
    "info": {
        "title": "APIs For Ride-With-Me",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/cars/store": {
            "post": {
                "tags": [
                    "Car"
                ],
                "summary": "Create a new car",
                "operationId": "abaa70d3ac280d08594f854c3db01c3a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "brand": {
                                        "type": "string"
                                    },
                                    "serie": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "seats_number": {
                                        "type": "integer"
                                    },
                                    "thumbnail": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "car": {
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized or Car already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cars/delete/{carId}": {
            "delete": {
                "tags": [
                    "Car"
                ],
                "summary": "Delete a car by ID",
                "operationId": "d8b6cd426928af35346927d7d8d1eba3",
                "parameters": [
                    {
                        "name": "carId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cars/get": {
            "get": {
                "tags": [
                    "Car"
                ],
                "summary": "Get all cars",
                "operationId": "0b8ae591e0bc9a9fa9c768c2eb14c0b2",
                "responses": {
                    "200": {
                        "description": "List of cars",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Car"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cars/update/{id}": {
            "put": {
                "tags": [
                    "Car"
                ],
                "summary": "Update a car by ID",
                "operationId": "89af401a939e615fcadfe7fea91d3010",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "serie": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "seats_number": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "thumbnail": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "car": {
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/messages/send/{recipient}": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Send a message",
                "operationId": "3bfece655c2f70b20f3b663138f32a6c",
                "parameters": [
                    {
                        "name": "recipient",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message",
                                    "type"
                                ],
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/messages/get/{recipient}/{type}": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get a conversation",
                "operationId": "6cc5a2c4d9cd4379c1b9be6f2d91dc23",
                "parameters": [
                    {
                        "name": "recipient",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Conversation not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/messages/get/last": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get conversations with messages",
                "operationId": "646b03d6b4244e748fbe4cf83fce3cf1",
                "responses": {
                    "200": {
                        "description": "Conversations fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Conversation"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/messages/delete/{recipient}": {
            "delete": {
                "tags": [
                    "Chat"
                ],
                "summary": "Delete a conversation",
                "operationId": "8856a12ddd17087a47e9d3713d99d2b2",
                "parameters": [
                    {
                        "name": "recipient",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation deleted successfully"
                    },
                    "404": {
                        "description": "Conversation not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/messages/read/{recipient}": {
            "put": {
                "tags": [
                    "Chat"
                ],
                "summary": "Mark a conversation as read",
                "operationId": "c337e1956033e79b0a945bcdd97bac01",
                "parameters": [
                    {
                        "name": "recipient",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation marked as read"
                    },
                    "404": {
                        "description": "Conversation not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cities/store": {
            "post": {
                "tags": [
                    "City"
                ],
                "summary": "Create city",
                "description": "Create a new city",
                "operationId": "d6e9d084a4787f7e1ff8a8449b51e6d4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "country"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the city",
                                        "type": "string"
                                    },
                                    "country": {
                                        "description": "Country of the city",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "City created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "City created successfully"
                                        },
                                        "city": {
                                            "$ref": "#/components/schemas/City"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "A city with this name already exists"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cities/delete/{cityId}": {
            "delete": {
                "tags": [
                    "City"
                ],
                "summary": "Delete city",
                "description": "Delete a city by ID",
                "operationId": "34557cfa8effbf27029ba64773f60f97",
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of the city to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City deleted successfully"
                    },
                    "404": {
                        "description": "City not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cities/get": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get all cities",
                "description": "Get a list of all cities",
                "operationId": "db3b70eba1267ce6d813c02ffb770f14",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/City"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cities/update/{id}": {
            "put": {
                "tags": [
                    "City"
                ],
                "summary": "Update city",
                "description": "Update a city by ID",
                "operationId": "09f4650b941b36b2350d4f530ea6e83d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the city to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "country"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the city",
                                        "type": "string"
                                    },
                                    "country": {
                                        "description": "Country of the city",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "City updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "City updated successfully"
                                        },
                                        "city": {
                                            "$ref": "#/components/schemas/City"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "City not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cities/{id}": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get city by ID",
                "description": "Get a city by its ID",
                "operationId": "2136fae27f1cc7be560cd645ce673ee2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the city to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/City"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "City not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/friends/request/{user}": {
            "post": {
                "tags": [
                    "Friends"
                ],
                "summary": "Send a friend request",
                "operationId": "0046fbdd4ae211372841c79f39a9079a",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user-id-12345"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend request sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friend request sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Friend request already sent or accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Friend request already sent or accepted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/friends/accept/{user}": {
            "post": {
                "tags": [
                    "Friends"
                ],
                "summary": "Accept a friend request",
                "operationId": "7f2fddfa9cc4e12eb75eb5fb8c229586",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user-id-12345"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend request accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friend request accepted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Friend request not found or already accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Friend request not found or already accepted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/friends/decline/{user}": {
            "delete": {
                "tags": [
                    "Friends"
                ],
                "summary": "Decline a friend request",
                "operationId": "7bf5ef65d4895b2bbdac8b8661117645",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user-id-12345"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend request declined",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friend request declined."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Friend request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Friend request not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/friends/cancel/{user}": {
            "delete": {
                "tags": [
                    "Friends"
                ],
                "summary": "Cancel a friend request",
                "operationId": "e998254942db3b9c1d36e2f1540f7a9b",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user-id-12345"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend request canceled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friend request canceled."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Friend request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Friend request not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/friends/unfriend/{user}": {
            "delete": {
                "tags": [
                    "Friends"
                ],
                "summary": "Unfriend a user",
                "operationId": "579592493172ba3b8813575676674584",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user-id-12345"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User unfriended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have unfriended the user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "You are not friends with this user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not friends with this user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/friends/get/{user}": {
            "get": {
                "tags": [
                    "Friends"
                ],
                "summary": "Get friends of a user",
                "operationId": "602ce5fc31f34b1534051b16d48e1de6",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user-id-12345"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of friends",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "friends": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/messages/group/store": {
            "post": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "Create a new group",
                "description": "Creates a new group and initializes a conversation for the group.",
                "operationId": "storeGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "route_id"
                                ],
                                "properties": {
                                    "route_id": {
                                        "description": "ID of the route",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Group created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group created successfully"
                                        },
                                        "group_details": {
                                            "$ref": "#/components/schemas/Group"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/members/get/{group}": {
            "get": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "Retrieve all group members",
                "description": "Retrieves all members of the specified group.",
                "operationId": "retrieveAllGroupMembers",
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "description": "ID of the group",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group members retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "owner": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "members": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not a member of the group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not a member of this group"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/v1/messages/group/send/{group}": {
            "post": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "Send a message to a group",
                "description": "Sends a message to the specified group.",
                "operationId": "sendMessageToGroup",
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "description": "ID of the group",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message",
                                    "type"
                                ],
                                "properties": {
                                    "message": {
                                        "description": "Message content",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of the message",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "$ref": "#/components/schemas/Message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not a member of the group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not a member of this group"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations/store": {
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "Create location",
                "description": "Create a new location",
                "operationId": "23b056702f56310d4b40f74a84313e44",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "cityId",
                                    "name"
                                ],
                                "properties": {
                                    "cityId": {
                                        "description": "ID of the city",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Name of the location",
                                        "type": "string"
                                    },
                                    "googleMapsLink": {
                                        "description": "Google Maps link for the location",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location created successfully"
                                        },
                                        "location": {
                                            "$ref": "#/components/schemas/Location"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "A location with this name already exists"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations/delete/{locationId}": {
            "delete": {
                "tags": [
                    "Location"
                ],
                "summary": "Delete location",
                "description": "Delete a location",
                "operationId": "9986458cb737e5cb8f589d6cfdc7c91d",
                "parameters": [
                    {
                        "name": "locationId",
                        "in": "path",
                        "description": "ID of the location to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations/get/{cityId}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get all locations",
                "description": "Get all locations for a specific city",
                "operationId": "2f6d65f8b4604db32a8806c8e0e9a72f",
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of the city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locations fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "locations": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Location"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations/{id}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get location",
                "description": "Get a location by ID",
                "operationId": "19e89c0274644f6ee5ef050ca9efec36",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations/update/{id}": {
            "put": {
                "tags": [
                    "Location"
                ],
                "summary": "Update location",
                "description": "Update a location by ID",
                "operationId": "381157d00be7e0e46a7d408059ee4d51",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the location",
                                        "type": "string"
                                    },
                                    "googleMapsLink": {
                                        "description": "Google Maps link for the location",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location updated successfully"
                                        },
                                        "location": {
                                            "$ref": "#/components/schemas/Location"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/media/store": {
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Store media file",
                "operationId": "ff3905e5b7eef5ee8a7d5f1713fc2506",
                "requestBody": {
                    "description": "Media file to store",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "media": {
                                        "description": "Media file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "File stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "File stored successfully"
                                        },
                                        "file_path": {
                                            "type": "string",
                                            "example": "/storage/cars/filename.ext"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notifications/get/{user}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get user notifications",
                "description": "Retrieve all notifications for a specific user.",
                "operationId": "getUserNotifications",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Notification"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report/reasons/get": {
            "get": {
                "tags": [
                    "ReportReasons"
                ],
                "summary": "Get all report reasons",
                "description": "Retrieve a list of all report reasons.",
                "operationId": "getReportReasons",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReportReason"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reservations/create": {
            "post": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Create reservation",
                "description": "Create a new reservation",
                "operationId": "cb5c986faf5b25bd6a87358cd902758b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "route_id",
                                    "status",
                                    "seat"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the user",
                                        "type": "integer"
                                    },
                                    "route_id": {
                                        "description": "ID of the route",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "Status of the reservation",
                                        "type": "string"
                                    },
                                    "seat": {
                                        "description": "Seat number",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reservation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Reservation already exists"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reservations/update/{reservation}": {
            "put": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Update reservation",
                "description": "Update the status of a reservation",
                "operationId": "d0483df571dd11a930c17cffd9ab7e27",
                "parameters": [
                    {
                        "name": "reservation",
                        "in": "path",
                        "description": "ID of the reservation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "Status of the reservation",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reservations/received": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Get received requests",
                "description": "Get a list of received reservation requests",
                "operationId": "bdb6e848d2f8ded36eab288a54d7c005",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reservation"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reservations/sent": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Get sent requests",
                "description": "Get a list of sent reservation requests",
                "operationId": "50305c2936b2e8fca39d97c930fa15b3",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reservation"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/routes/get": {
            "get": {
                "tags": [
                    "Route"
                ],
                "summary": "Get routes",
                "description": "Get a list of routes",
                "operationId": "f74de677df3f9db8c9ab3d9b01c63e1e",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Route"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/routes/search": {
            "post": {
                "tags": [
                    "Route"
                ],
                "summary": "Search routes",
                "description": "Search for routes based on criteria",
                "operationId": "c6af3baaf486d08a932e387090e06874",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cityFromId": {
                                        "description": "ID of the city from",
                                        "type": "integer"
                                    },
                                    "cityToId": {
                                        "description": "ID of the city to",
                                        "type": "integer"
                                    },
                                    "date": {
                                        "description": "Date of the route (optional)",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "time": {
                                        "description": "Time of the route (optional)",
                                        "type": "string",
                                        "format": "time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Route"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/routes/add": {
            "post": {
                "tags": [
                    "Route"
                ],
                "summary": "Add route",
                "description": "Add a new route",
                "operationId": "514a98b4ec5a153d7cfcf805c2c68c51",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Route"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Route added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Route"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/routes/delete/{id}": {
            "delete": {
                "tags": [
                    "Route"
                ],
                "summary": "Delete route",
                "description": "Delete a route by ID",
                "operationId": "6cdd1f5464d0885d6eaca6cd8900d2ea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the route to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Route deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Route deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Route not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/routes/{id}": {
            "get": {
                "tags": [
                    "Route"
                ],
                "summary": "Get route by ID",
                "description": "Get route information by route ID",
                "operationId": "8b6937e35e96fa23d72cb3ae45d05998",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the route",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Route"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Route not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/routes/user/{driverId}": {
            "get": {
                "tags": [
                    "Route"
                ],
                "summary": "Get routes by driver ID",
                "description": "Get routes of a user by driver ID",
                "operationId": "d1937a6e33ee6868910080df9efd95d6",
                "parameters": [
                    {
                        "name": "driverId",
                        "in": "path",
                        "description": "ID of the driver",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Route"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No routes found for the driver"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Login user",
                "description": "Login a user with email and password",
                "operationId": "d7d51829be22c07b1dbdeca806fd4354",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "User is banned"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/api/v1/signup": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Signup user",
                "description": "Signup a new user",
                "operationId": "b25708072ca3a75b5d9b1a35f331bbad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "A user with this email already exists"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/api/v1/users/get": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "description": "Get a list of all users",
                "operationId": "1079637514556d3877e0955a10e7a012",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/update/{userId}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "description": "Update user details",
                "operationId": "7c2f15d6b6dc862606e58c3a6545e48e",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/delete/{userId}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "description": "Delete a user by ID",
                "operationId": "dab1871f1d115d3fc7df49c17fc1c495",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/ban/{userId}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Ban user",
                "description": "Ban a user by ID",
                "operationId": "78afb0e084eb9e06579ac272a51bdbd6",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "date_until": {
                                        "description": "Date until the user is banned",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User banned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/ban/remove/{userId}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove ban from user",
                "description": "Remove ban from a user by ID",
                "operationId": "5df8273345ef3b376d5debd3d2509035",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User unbanned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ban not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "description": "Get user information by user ID",
                "operationId": "5c0dcb916875f83e4721e8432e165a9c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/getByToken": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get current user",
                "description": "Get information of the current authenticated user",
                "operationId": "ca8ee9a1ada126a36acfe025a535b740",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reports/add/{user}": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Add a report",
                "description": "Create a new report for a user.",
                "operationId": "addReport",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to report",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reason": {
                                        "description": "Reason for the report",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "Description of the report",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Report added successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reports/delete/{user}": {
            "delete": {
                "tags": [
                    "Reports"
                ],
                "summary": "Delete a report",
                "description": "Delete a report made by the authenticated user.",
                "operationId": "deleteReport",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the reported user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report deleted successfully"
                    },
                    "404": {
                        "description": "Report not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/ratings/add/{user}": {
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Add a rating",
                "description": "Create a new rating for a user.",
                "operationId": "addRating",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to rate",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stars_number": {
                                        "description": "Number of stars",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "Description of the rating",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rating added successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/ratings/update/{user}": {
            "put": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Update a rating",
                "description": "Update an existing rating for a user.",
                "operationId": "updateRating",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to rate",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stars_number": {
                                        "description": "Number of stars",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "Description of the rating",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rating updated successfully"
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/ratings/delete/{user}": {
            "delete": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Delete a rating",
                "description": "Delete an existing rating for a user.",
                "operationId": "deleteRating",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the rated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rating deleted successfully"
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/ratings/get/{user}": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get all ratings for a user",
                "description": "Retrieve all ratings for a user.",
                "operationId": "getRatings",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the rated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ratings fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rating"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/suggestions/add": {
            "post": {
                "tags": [
                    "Suggestions"
                ],
                "summary": "Add a suggestion",
                "description": "Create a new suggestion.",
                "operationId": "addSuggestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "suggestion_type": {
                                        "description": "Type of the suggestion",
                                        "type": "string"
                                    },
                                    "suggestion_content": {
                                        "description": "Content of the suggestion",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Suggestion added successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/suggestions/delete/{suggestion}": {
            "delete": {
                "tags": [
                    "Suggestions"
                ],
                "summary": "Delete a suggestion",
                "description": "Delete an existing suggestion.",
                "operationId": "deleteSuggestion",
                "parameters": [
                    {
                        "name": "suggestion",
                        "in": "path",
                        "description": "ID of the suggestion",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Suggestion deleted successfully"
                    },
                    "404": {
                        "description": "Suggestion not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/suggestions/get": {
            "get": {
                "tags": [
                    "Suggestions"
                ],
                "summary": "Get all suggestions",
                "description": "Retrieve all suggestions.",
                "operationId": "getSuggestions",
                "responses": {
                    "200": {
                        "description": "Suggestions fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Suggestion"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No suggestions found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Car": {
                "title": "Car",
                "description": "Car model",
                "required": [
                    "id",
                    "brand",
                    "serie",
                    "type",
                    "seats_number",
                    "thumbnail"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "serie": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "seats_number": {
                        "type": "integer"
                    },
                    "thumbnail": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Message": {
                "required": [
                    "content",
                    "type",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "content": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Conversation": {
                "required": [
                    "id",
                    "sender_id",
                    "recipient_id",
                    "type",
                    "unread_messages"
                ],
                "properties": {
                    "id": {
                        "description": "Conversation unique identifier",
                        "type": "string",
                        "format": "uuid"
                    },
                    "sender_id": {
                        "description": "Sender unique identifier",
                        "type": "string",
                        "format": "uuid"
                    },
                    "recipient_id": {
                        "description": "Recipient unique identifier",
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "description": "Type of conversation (e.g., 'private', 'group')",
                        "type": "string"
                    },
                    "unread_messages": {
                        "description": "Number of unread messages in the conversation",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "City": {
                "title": "City",
                "description": "City model",
                "required": [
                    "id",
                    "name",
                    "country"
                ],
                "properties": {
                    "id": {
                        "description": "City ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "description": "Name of the city",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country of the city",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Friend": {
                "title": "Friend",
                "description": "Friend model",
                "required": [
                    "id",
                    "user_id",
                    "friend_id"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "friend_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "Group": {
                "title": "Group",
                "description": "Group model",
                "required": [
                    "id",
                    "route_id",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key of the group",
                        "type": "string",
                        "format": "uuid"
                    },
                    "route_id": {
                        "description": "ID of the associated route",
                        "type": "string",
                        "format": "uuid"
                    },
                    "group_picture": {
                        "description": "URL of the group picture",
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "description": "Status of the group",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Location": {
                "title": "Location",
                "description": "Location model",
                "required": [
                    "id",
                    "city_id",
                    "name",
                    "google_maps_link"
                ],
                "properties": {
                    "id": {
                        "description": "Location ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "city_id": {
                        "description": "ID of the city",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "description": "Name of the location",
                        "type": "string"
                    },
                    "google_maps_link": {
                        "description": "Google Maps link for the location",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Notification": {
                "title": "Notification",
                "description": "Notification model",
                "required": [
                    "id",
                    "user_id",
                    "sender_id",
                    "type",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key of the notification",
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "description": "ID of the user who receives the notification",
                        "type": "string",
                        "format": "uuid"
                    },
                    "sender_id": {
                        "description": "ID of the user who sent the notification",
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "description": "Type of the notification",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the notification was created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ReportReason": {
                "title": "ReportReason",
                "description": "ReportReason model",
                "required": [
                    "id",
                    "reason"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key of the report reason",
                        "type": "string",
                        "format": "uuid"
                    },
                    "reason": {
                        "description": "Description of the report reason",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Reservation": {
                "title": "Reservation",
                "description": "Reservation model",
                "required": [
                    "id",
                    "user_id",
                    "route_id",
                    "status",
                    "seat"
                ],
                "properties": {
                    "id": {
                        "description": "Reservation ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "description": "ID of the user making the reservation",
                        "type": "string",
                        "format": "uuid"
                    },
                    "route_id": {
                        "description": "ID of the route being reserved",
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "description": "Status of the reservation",
                        "type": "string"
                    },
                    "seat": {
                        "description": "Seat number",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Route": {
                "title": "Route",
                "description": "Route model",
                "required": [
                    "id",
                    "driver_id",
                    "city_from_id",
                    "city_to_id",
                    "location_id",
                    "datetime",
                    "passengers_number",
                    "price"
                ],
                "properties": {
                    "id": {
                        "description": "Route ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "driver_id": {
                        "description": "Driver ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "city_from_id": {
                        "description": "City from ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "city_to_id": {
                        "description": "City to ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "location_id": {
                        "description": "Location ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "datetime": {
                        "description": "Date and time of the route",
                        "type": "string",
                        "format": "date-time"
                    },
                    "passengers_number": {
                        "description": "Number of passengers",
                        "type": "integer"
                    },
                    "price": {
                        "description": "Price",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "first_name": {
                        "description": "First name of the user",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Last name of the user",
                        "type": "string"
                    },
                    "profile_picture": {
                        "description": "URL of the user's profile picture",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "Password of the user",
                        "type": "string"
                    },
                    "role": {
                        "description": "Role of the user",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Report": {
                "title": "Report",
                "description": "Report model",
                "required": [
                    "id",
                    "reporter_id",
                    "reported_user_id",
                    "reason"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key of the report",
                        "type": "string",
                        "format": "uuid"
                    },
                    "reporter_id": {
                        "description": "ID of the reporter",
                        "type": "string",
                        "format": "uuid"
                    },
                    "reported_user_id": {
                        "description": "ID of the reported user",
                        "type": "string",
                        "format": "uuid"
                    },
                    "reason": {
                        "description": "Reason for the report",
                        "type": "integer"
                    },
                    "description": {
                        "description": "Description of the report",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the report was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the report was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Rating": {
                "title": "Rating",
                "description": "Rating model",
                "required": [
                    "id",
                    "rated_user_id",
                    "rater_id",
                    "stars_number"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key of the rating",
                        "type": "string",
                        "format": "uuid"
                    },
                    "rated_user_id": {
                        "description": "ID of the rated user",
                        "type": "string",
                        "format": "uuid"
                    },
                    "rater_id": {
                        "description": "ID of the rater",
                        "type": "string",
                        "format": "uuid"
                    },
                    "stars_number": {
                        "description": "Number of stars",
                        "type": "integer"
                    },
                    "description": {
                        "description": "Description of the rating",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the rating was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the rating was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Suggestion": {
                "title": "Suggestion",
                "description": "Suggestion model",
                "required": [
                    "uuid",
                    "user_id",
                    "type",
                    "content"
                ],
                "properties": {
                    "uuid": {
                        "description": "Primary key of the suggestion",
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "description": "ID of the user who made the suggestion",
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "description": "Type of the suggestion",
                        "type": "string"
                    },
                    "content": {
                        "description": "Content of the suggestion",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the suggestion was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the suggestion was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}